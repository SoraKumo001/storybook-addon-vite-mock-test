{"version":3,"file":"LibHook.stories-Dxh8Tysb.js","sources":["../../stories/LibHook/LibHook.tsx","../../stories/LibHook/LibHook.stories.tsx"],"sourcesContent":["import React, { FC, useState } from \"react\";\nimport { getMessage } from \"./message\";\n\ninterface Props {}\n\n/**\n * LibHook\n *\n * @param {Props} { }\n */\nexport const LibHook: FC<Props> = ({}) => {\n  const [, reload] = useState({});\n  const value = getMessage();\n  return (\n    <div>\n      <button onClick={() => reload({})}>{value}</button>\n    </div>\n  );\n};\n","import { Meta, StoryObj } from \"@storybook/nextjs-vite\";\nimport { expect, userEvent, waitFor, within } from \"storybook/test\";\nimport { createMock, getMock } from \"storybook-addon-vite-mock\";\nimport { LibHook } from \"./LibHook\";\nimport { getMessage } from \"./message\";\n\nconst meta: Meta<typeof LibHook> = {\n  component: LibHook,\n};\nexport default meta;\n\nexport const Primary: StoryObj<typeof LibHook> = {\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(\"Before\")).toBeInTheDocument();\n  },\n};\n\nexport const Mock: StoryObj<typeof LibHook> = {\n  parameters: {\n    moduleMock: {\n      mock: () => {\n        const mock = createMock(getMessage);\n        mock.mockReturnValue(\"After\");\n        return [mock];\n      },\n    },\n  },\n  play: async ({ canvasElement, parameters }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(\"After\")).toBeInTheDocument();\n    const mock = getMock(parameters, getMessage);\n    expect(mock).toBeCalled();\n  },\n};\n\nexport const Action: StoryObj<typeof LibHook> = {\n  parameters: {\n    moduleMock: {\n      mock: () => {\n        const mock = createMock(getMessage);\n        return [mock];\n      },\n    },\n  },\n  play: async ({ canvasElement, parameters }) => {\n    const canvas = within(canvasElement);\n    const mock = getMock(parameters, getMessage);\n    mock.mockReturnValue(\"Action\");\n    userEvent.click(await canvas.findByRole(\"button\"));\n    await waitFor(() => {\n      expect(canvas.getByText(\"Action\")).toBeInTheDocument();\n    });\n  },\n};\n"],"names":["cov_6t76ksl41","s","LibHook","f","value","getMessage","expect","waitFor","component","canvasElement","play","canvas","within","getByText","toBeInTheDocument","Mock","moduleMock","mock","mockReturnValue","parameters","getMock","toBeCalled","Action","createMock","userEvent","click","findByRole"],"mappings":"qkGAAoCA,EAAA,EAAAC,EAeM,CAAA,IAAA,MAAAC,EAAAA,CAAA,CAAA,IAAA,CAAAF,EAAA,EAAAG,6CAG1CC,GAAAJ,EAAA,EAAAC,EAAAI,CAAAA,IAAAA,EAAA,GAAAL,OAAAA,EAAA,EAAAC;;sDCjBA,KAASK,CAAAA,OAAAA,EAAAA,UAAAA,EAAmBC,QAAAA,EAAAA,OAAAA,CAAuB,EAAA,0BAMjDC,EAAWN,CACZM,UAAAN,CACD,EAGiBO,EAAAA,CAAcC,KAAM,MAAA,CAAAD,cAAAA,KAAA,CAC3BE,MAAAA,EAASC,EAAOH,CAAa,EACnCH,EAAOK,EAAOE,UAAU,QAAQ,CAAC,EAAEC,kBAAkB,CAAA,CAEzD,EAGcC,EAAA,CACVC,WAAU,YACI,CACVC,KAAAA,IAAU,CACLC,MAAAA,EAAAA,EAAgBb,CAAQ,EAC7BY,OAAAA,EAAOC,gBAAM,OAAA,EACf,CAAAD,CAAA,CAAA,CACF,CAEFP,OAA4B,MAAA,CAAAD,cAAAA,EAAAU,WAAAA,KAAA,CAAEA,MAAAA,EAAAA,EAAAA,CAAAA,EAAiBb,EAAAK,EAAAE,UAAA,OAAA,CAAA,EAAAC,kBAAA,EACvCH,MAAAA,EAAMS,EAASD,GAAe,EAC7BR,EAAAA,CAAM,EAAAU,WAAW,CAAA,CAExBf,EAEHgB,EAAA,CAEDH,YACEA,WAAY,CACVH,KAAAA,IAEc,CADAO,EAAAlB,CAAA,CACGkB,EAGjB,EACFb,KAAC,MAAA,CAAAD,cAAAA,EAAAU,WAAAA,KAAA,SACYP,EAAAH,CAAA,EAAeW,EAAAD,EAAAd,CAAA,EAAEc,gBAAAA,QAAAA,EAAiBK,EAAAC,MAAA,MAAAd,EAAAe,WAAA,QAAA,CAAA,EAC7C,MAAMf,EAAM,IAAS,CACrBL,IAAac,UAAkB,6BAAa,CAAA,CAC5CH,CAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}