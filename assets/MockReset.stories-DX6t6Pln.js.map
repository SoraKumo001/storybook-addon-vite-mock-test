{"version":3,"file":"MockReset.stories-DX6t6Pln.js","sources":["../../stories/MockReset/MockReset.tsx","../../stories/MockReset/MockReset.stories.tsx"],"sourcesContent":["import React, { FC } from \"react\";\nimport { action1, action2 } from \"./action\";\n\ninterface Props {}\n\n/**\n * MockReset\n *\n * @param {Props} { }\n */\nexport const MockReset: FC<Props> = ({}) => {\n  return (\n    <div>\n      <button onClick={action1}>Button1</button>\n      <button onClick={action2}>Button2</button>\n    </div>\n  );\n};\n","import { Meta, StoryObj } from \"@storybook/nextjs-vite\";\nimport { expect, userEvent, waitFor, within } from \"storybook/test\";\nimport { createMock, getMock, resetMock } from \"storybook-addon-vite-mock\";\nimport { action1, action2 } from \"./action\";\nimport { MockReset } from \"./MockReset\";\n\nconst meta: Meta<typeof MockReset> = {\n  component: MockReset,\n};\nexport default meta;\n\nexport const Primary: StoryObj<typeof MockReset> = {\n  parameters: {\n    moduleMock: {\n      mock: () => {\n        // The mock to be used is created here\n        const mock1 = createMock(action1);\n        const mock2 = createMock(action2);\n        return [mock1, mock2];\n      },\n    },\n  },\n  play: async ({ canvasElement, parameters }) => {\n    const mock1 = getMock(parameters, action1);\n    const mock2 = getMock(parameters, action2);\n\n    const canvas = within(canvasElement);\n    await waitFor(() => {\n      expect(mock1).not.toBeCalled();\n      expect(mock2).not.toBeCalled();\n    });\n    userEvent.click(await canvas.findByText(\"Button1\"));\n    await waitFor(() => {\n      expect(mock1).toBeCalled();\n      expect(mock2).not.toBeCalled();\n    });\n\n    // Reset all mock\n    resetMock(parameters);\n    await waitFor(() => {\n      expect(mock1).not.toBeCalled();\n      expect(mock2).not.toBeCalled();\n    });\n\n    userEvent.click(await canvas.findByText(\"Button2\"));\n    await waitFor(() => {\n      expect(mock1).not.toBeCalled();\n      expect(mock2).toBeCalled();\n    });\n  },\n};\n"],"names":["cov_1qy63i9ihi","s","MockReset","f","_jsxs","children","expect","waitFor","component","moduleMock","mock","mock1","mock2","action1","createMock","action2","parameters","getMock","canvas","within","canvasElement","not","toBeCalled","userEvent","click","findByText","resetMock","Primary"],"mappings":"g5FACiCA,EAAA,EAAAC,EAAA,CAAA,IAaV,MAAAC,EAAAA,CAAA,CAAA,KAAAF,EAAA,EAAAG,EAAA,CAAA,IAAAH,EAAA,EAAAC,EAAA,CAAA,IAASG,EAAA,KAAA,MAAA,CAAAC,SAAA;;wDCbhC,KAASC,CAAAA,OAAAA,EAAAA,UAAAA,EAAmBC,QAAAA,EAAAA,OAAAA,CAAuB,EAAA,0BAMjDC,EAAWN,CACZM,UAAAN,CACD,EAIIO,EAAY,YACE,CACVA,WAAA,CACAC,KAAAA,IAAW,CAEXC,MAAAA,EAAeC,EAAMC,CAAA,EACvBD,EAAAE,EAAAC,CAAA,EACF,MAAA,CAAAJ,EAAAC,CAAA,CAAA,CACD,GAC6BI,KAAAA,MAAAA,CAAAA,cAAAA,EAAAA,WAAAA,KAAAA,CAAiBL,MAAAA,EAAAM,EAAAD,EAAAH,CAAA,EACvCF,EAAQM,EAAQD,EAAYH,CAAO,EAGnCK,EAASC,EAAOC,CAAa,EACnC,MAAMb,EAAQ,IAAM,CACXI,EAAAA,CAAK,EAAEU,IAAIC,WAAW,EACtBV,EAAAA,CAAK,EAAES,IAAIC,WAAW,CAAA,CAC9B,EACDC,EAAUC,MAAM,MAAMN,EAAOO,WAAW,SAAS,CAAC,EAClD,MAAMlB,EAAQ,IAAM,CACXI,EAAAA,CAAK,EAAEW,WAAW,EAClBV,EAAAA,CAAK,EAAES,IAAIC,WAAW,CAAA,CAC9B,EAGDI,EAAUV,CAAU,EACpB,MAAMT,EAAQ,IAAM,CACXI,EAAAA,CAAK,EAAEU,IAAIC,WAAW,EACtBV,EAAAA,CAAK,EAAES,IAAIC,WAAW,CAAA,CAC9B,EAGDC,EAAMhB,MAAc,MAAAW,EAAAO,WAAA,SAAA,CAAA,QACZlB,EAAM,IAAMe,CACXV,EAAAA,CAAK,EAAEU,IAAAA,WAAY,EAC1BV,EAAAA,CAAA,EAAAU,WAAA,CAAA,CACJ,CAAA,CACDK,YAAAA,EAAAA,WAAAA,CAAAA,GAAAA,EAAAA,WAAAA,KAAAA,CAAAA,IAAAA,EAAAA,EAAAA,aAAAA,YAAAA,EAAAA,KAAAA,OAAAA,CAAAA,eAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,aAAAA,YAAAA,EAAAA,OAAAA,YAAAA,EAAAA,MAAAA,CAAAA,CAAAA"}